/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, GradePassback as PrismaGradePassback } from "@prisma/client";
import { GradePassbackDto } from "../GradePassbackDto";
import { GradePassback } from "./GradePassback";

export class GradePassbackServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.GradePassbackCountArgs, "select">
  ): Promise<number> {
    return this.prisma.gradePassback.count(args);
  }

  async gradePassbacks(
    args: Prisma.GradePassbackFindManyArgs
  ): Promise<PrismaGradePassback[]> {
    return this.prisma.gradePassback.findMany(args);
  }
  async gradePassback(
    args: Prisma.GradePassbackFindUniqueArgs
  ): Promise<PrismaGradePassback | null> {
    return this.prisma.gradePassback.findUnique(args);
  }
  async createGradePassback(
    args: Prisma.GradePassbackCreateArgs
  ): Promise<PrismaGradePassback> {
    return this.prisma.gradePassback.create(args);
  }
  async updateGradePassback(
    args: Prisma.GradePassbackUpdateArgs
  ): Promise<PrismaGradePassback> {
    return this.prisma.gradePassback.update(args);
  }
  async deleteGradePassback(
    args: Prisma.GradePassbackDeleteArgs
  ): Promise<PrismaGradePassback> {
    return this.prisma.gradePassback.delete(args);
  }
  async GradePassback(args: GradePassbackDto): Promise<GradePassbackDto> {
    throw new Error("Not implemented");
  }
}
