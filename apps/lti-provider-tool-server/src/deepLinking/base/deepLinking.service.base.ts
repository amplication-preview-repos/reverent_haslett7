/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DeepLinking as PrismaDeepLinking } from "@prisma/client";
import { DeepLinkingDto } from "../DeepLinkingDto";
import { DeepLinking } from "./DeepLinking";

export class DeepLinkingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DeepLinkingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.deepLinking.count(args);
  }

  async deepLinkings(
    args: Prisma.DeepLinkingFindManyArgs
  ): Promise<PrismaDeepLinking[]> {
    return this.prisma.deepLinking.findMany(args);
  }
  async deepLinking(
    args: Prisma.DeepLinkingFindUniqueArgs
  ): Promise<PrismaDeepLinking | null> {
    return this.prisma.deepLinking.findUnique(args);
  }
  async createDeepLinking(
    args: Prisma.DeepLinkingCreateArgs
  ): Promise<PrismaDeepLinking> {
    return this.prisma.deepLinking.create(args);
  }
  async updateDeepLinking(
    args: Prisma.DeepLinkingUpdateArgs
  ): Promise<PrismaDeepLinking> {
    return this.prisma.deepLinking.update(args);
  }
  async deleteDeepLinking(
    args: Prisma.DeepLinkingDeleteArgs
  ): Promise<PrismaDeepLinking> {
    return this.prisma.deepLinking.delete(args);
  }
  async DeepLinking(args: DeepLinkingDto): Promise<DeepLinkingDto> {
    throw new Error("Not implemented");
  }
}
